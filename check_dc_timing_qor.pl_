#!/usr/bin/perl -w
$tile = $ARGV[0];
$dir =  $ARGV[1];
$src_file = "$dir/rpts/DgSynFinalRpt/qor.csv.gz";
$dst_file = "./dc_tim_qor/$tile.csv";
open SRC, "gzip -cd $src_file |" or die "can not open $src_file";
open DST, "> $dst_file";

@clk_name = ();
while (<SRC>) {
 chomp;
 @tim = split /,/;
 if($tim[0] =~ /Summary/) {
 print DST "\n\n";
 last;
 }
 elsif (!($tim[0] =~ /((I2C)|(C2O)|(TO_GCLK)|(I2O))/)) {
 print DST "$tim[0],";
 print DST "$tim[1]\n";
 if (!($tim[0] =~ /Path Group/)) {
 push @clk_name,$tim[0];
 }
 }
}

close SRC;
close DST;

open SRC, "gzip -cd $src_file |" or die "can not open $src_file";
open DST, ">> $dst_file";
while (<SRC>) {
 chomp;
 @tim = split /,/;
 if($tim[0] =~ /Summary/) {
 last;
 }
 elsif (!($tim[0] =~ /((I2C)|(C2O)|(TO_GCLK)|(I2O))/)) {
 print DST "$tim[0],";
 print DST "$tim[2]\n";
 }
}

close SRC;
close DST;
##check clock is full
$src_file = "$dir/rpts/DgSynFinalRpt/DgSynFinalRpt.clock_list.gz";
open SRC, "gzip -cd $src_file |" or die "can not open $src_file";
@clk_list = ();
while (<SRC>) {
  chomp;
  if(/(.*):/) {
  push @clk_list, $1;
  }
}
close SRC;

$src_file = "$dir/rpts/DgSynFinalRpt/DgSynFinalRpt.regsPerClock.rpt.gz";
open SRC, "gzip -cd $src_file |" or die "can not open $src_file";
#@empty_clock_list = ();
while (<SRC>) {
  chomp;
  if(/There are 0 registers driven by clock : (.*)/) {
  push @clk_name, $1;
  }
}
close SRC;

@clk_name = sort @clk_name; ##empty clock add tim clock
@clk_list = sort @clk_list; ##golden
if (@clk_name == @clk_list) 
{
 print "success: clock info is full...";
} else {
         $dst_file = "./dc_tim_qor/$tile.err";
         open DST, "> $dst_file";
         foreach (@clk_list) {
          @clk_name_bak = @clk_name;
          print DST "$_ miss\n" unless ($_ ~~ @clk_name_bak);
          }
        }
